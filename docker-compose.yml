version: "3"
services:
  eurekaService1:      # 默认情况下，其他服务可以使用服务名称连接到该服务。因此，对于eurekaService1的节点，它需要连接http://eurekaService2/3:951X/eureka/，因此需要配置该服务的名称是eurekaService1。
    image: tcr:5000/myhub/microservice-eureka-service:0.1.0
    deploy:
      replicas: 1   #定义 replicated 模式的服务的复本数量
      update_config:
        parallelism: 1    #每次更新复本数量
        delay: 2s       #每次更新间隔
      restart_policy:
        condition: on-failure     #定义服务的重启条件
    networks:
      - eureka-net
    ports:
      - "9511:9511"
    environment:
      - spring.profiles.active=eurekaService1
  eurekaService2:    # 高可用eureka注册节点2
    image: tcr:5000/myhub/microservice-eureka-service:0.1.0
    deploy:
      replicas: 1   #定义 replicated 模式的服务的复本数量
      update_config:
        parallelism: 1    #每次更新复本数量
        delay: 2s       #每次更新间隔
      restart_policy:
        condition: on-failure     #定义服务的重启条件
    networks:
      - eureka-net
    ports:
      - "9512:9512"
    environment:
      - spring.profiles.active=eurekaService2
  eurekaService3:    # 高可用eureka注册节点3
    image: tcr:5000/myhub/microservice-eureka-service:0.1.0
    deploy:
      replicas: 1   #定义 replicated 模式的服务的复本数量
      update_config:
        parallelism: 1    #每次更新复本数量
        delay: 2s       #每次更新间隔
      restart_policy:
        condition: on-failure     #定义服务的重启条件
    networks:
      - eureka-net
    ports:
      - "9513:9513"
    environment:
      - spring.profiles.active=eurekaService3
  productService:    # 商品微服务
    image: tcr:5000/myhub/microservice-consumer-productservice:0.1.0
    deploy:
      replicas: 1   #定义 replicated 模式的服务的复本数量
      update_config:
        parallelism: 1    #每次更新复本数量
        delay: 2s       #每次更新间隔
      restart_policy:
        condition: on-failure     #定义服务的重启条件
    networks:
      - eureka-net
    ports:
      - "9515:9515"
    depends_on:
      - eurekaService1
      - eurekaService2
      - eurekaService3
  apiGateway:  #服务网关服务
    image: tcr:5000/myhub/microservice-api-gateway:0.1.0
    deploy:
      replicas: 1   #定义 replicated 模式的服务的复本数量
      update_config:
        parallelism: 1    #每次更新复本数量
        delay: 2s       #每次更新间隔
      restart_policy:
        condition: on-failure     #定义服务的重启条件
    networks:
      - eureka-net
    ports:
      - "9516:9516"
    depends_on:
      - productService
      - userService
      - eurekaService1
      - eurekaService2
      - eurekaService3
  nodeComment:    #异构平台商品评价服务
    image: tcr:5000/myhub/microservice-nodejs-comment:0.1.0
    deploy:
      replicas: 1   #定义 replicated 模式的服务的复本数量
      update_config:
        parallelism: 1    #每次更新复本数量
        delay: 2s       #每次更新间隔
      restart_policy:
        condition: on-failure     #定义服务的重启条件
    networks:
      - eureka-net
    ports:
      - "3000:3000"
  sidecarComment:    #接入异构平台的微服务
    image: tcr:5000/myhub/microservice-sidecar-comment:0.1.0
    deploy:
      replicas: 1   #定义 replicated 模式的服务的复本数量
      update_config:
        parallelism: 1    #每次更新复本数量
        delay: 2s       #每次更新间隔
      restart_policy:
        condition: on-failure     #定义服务的重启条件
    networks:
      - eureka-net
    ports:
      - "9517:9517"
    depends_on:
      - nodeComment
      - eurekaService1
      - eurekaService2
      - eurekaService3
  zookeeper:       #zookeeper服务，主要是协助kafka消息中心的
    image: tcr:5000/myhub/zookeeper:3.4.9
    deploy:
      replicas: 1   #定义 replicated 模式的服务的复本数量
      update_config:
        parallelism: 1    #每次更新复本数量
        delay: 2s       #每次更新间隔
      restart_policy:
        condition: on-failure     #定义服务的重启条件
    networks:
      - eureka-net
    ports:
      - "2181:2181"
  kafka:      #kafka消息中心，在此主要是用户配置刷新的消息通知。
    image: tcr:5000/myhub/kafka:0.10.1.1
    deploy:
      replicas: 1   #定义 replicated 模式的服务的复本数量
      update_config:
        parallelism: 1    #每次更新复本数量
        delay: 2s       #每次更新间隔
      restart_policy:
        condition: on-failure     #定义服务的重启条件
    networks:
      - eureka-net
    ports:
      - "9092:9092"
    environment:
      - 'KAFKA_ADVERTISED_HOST_NAME=kafka'
      - 'KAFKA_ADVERTISED_PORT=9092'
      - 'KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181'
    depends_on:
      - zookeeper
  rabbitmq:     #rqbbitmq消息中心，在此主要是用户配置刷新的消息通知。
    image: tcr:5000/myhub/rabbitmq:3.6.9-management-alpine
    hostname: 'my-rabbit'
    deploy:
      replicas: 1   #定义 replicated 模式的服务的复本数量
      update_config:
        parallelism: 1    #每次更新复本数量
        delay: 2s       #每次更新间隔
      restart_policy:
        condition: on-failure     #定义服务的重启条件
    networks:
      - eureka-net
    ports:
      - "5672:5672"
      - "15672:15672"
  configService:    #微服务的配置中心
    image: tcr:5000/myhub/microservice-config-service:0.1.0
    deploy:
      replicas: 1   #定义 replicated 模式的服务的复本数量
      update_config:
        parallelism: 1    #每次更新复本数量
        delay: 2s       #每次更新间隔
      restart_policy:
        condition: on-failure     #定义服务的重启条件
    networks:
      - eureka-net
    ports:
      - "9518:9518"
    depends_on:
      - kafka
      - zookeeper
      - eurekaService1
      - eurekaService2
      - eurekaService3
  userService:      #用户微服务，且通过config service中获取相关配置信息
    image: tcr:5000/myhub/microservice-provider-userservice:0.1.0
    deploy:
      replicas: 1   #定义 replicated 模式的服务的复本数量
      update_config:
        parallelism: 1    #每次更新复本数量
        delay: 2s       #每次更新间隔
      restart_policy:
        condition: on-failure     #定义服务的重启条件
    networks:
      - eureka-net
    ports:
      - "9514:9514"
    depends_on:
      - kafka
      - zookeeper
      - configService
      - eurekaService1
      - eurekaService2
      - eurekaService3
networks:
  eureka-net:
    driver: overlay
